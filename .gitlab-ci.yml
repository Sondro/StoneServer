image: codehz/stonebuilder
stages:
  - build
  - package

variables:
  GIT_STRATEGY: none
  GIT_SUBMODULE_STRATEGY: recursive

job_build:
  variables:
    GIT_STRATEGY: clone
  script:
    - mkdir build install
    - cd build
    - cmake -DCMAKE_INSTALL_PREFIX:PATH=../install -DCMAKE_BUILD_TYPE=Release -DUSE_COTIRE=OFF .. || (cat CMakeFiles/CMakeOutput.log && cat CMakeFiles/CMakeError.log && exit 1)
    - make
    - make install
  artifacts:
    paths:
      - install/
    expire_in: 20hours
  stage: build

job_package:
  script:
    - mkdir -p output/support && cd output
    - cat ../lib32.txt | xargs -I {} cp -Lrv /usr/lib32/{} support/{}
    - cp -Lv /usr/lib32/ld-*.so support/ld.so
    - cp ../install/bin/* .
    - cp /usr/bin/proot .
    - cp ../loader .
    - strip stone
  artifacts:
    paths:
      - output
  dependencies:
    - job_build
  stage: package

build_docker_image:
  stage: package
  tags:
    - host-docker
  before_script:
    - docker info
  script:
    - mkdir -p image/{usr/lib32,lib,run} && cd image
    - cat ../lib32.txt | xargs -I {} cp -Lrv /usr/lib32/{} usr/lib32/{}
    - cp -Lv /usr/lib32/ld-linux.so.2 lib
    - cp -v ../install/bin/* run
    - strip run/*
    - |
      docker build -t codehz/stoneserver:latest --no-cache -f - . <<EOF
      FROM scratch
      ADD . /
      WORKDIR /run
      CMD ["/run/stone"]
      EOF
    - docker push codehz/stoneserver:latest